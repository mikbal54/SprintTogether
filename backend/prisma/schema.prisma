generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String @id @default(uuid())
  auth0Id String @unique
  name    String @default("")

  @@index([name], map: "idx_user_name")
}

model Sprint {
  id          String   @id @default(uuid())
  name        String   @default("")
  createdAt   DateTime @default(now())
  description String   @default("")
  status      Status   @default(OPEN)
  hasChildren Boolean  @default(false)
  tasks       Task[]

  @@index([createdAt(sort: Desc)], map: "idx_sprint_created_desc")
}

model Task {
  id          String  @id @default(uuid())
  title       String
  hours       Int
  parentId    String?
  sprintId    String
  assignedTo  String?
  description String  @default("")
  hasChildren Boolean @default(false)
  status      Status  @default(OPEN)
  parent      Task?   @relation("TaskChildren", fields: [parentId], references: [id])
  children    Task[]  @relation("TaskChildren")
  sprint      Sprint  @relation(fields: [sprintId], references: [id])

  @@index([sprintId, parentId, id], map: "idx_task_sprint_parent_pagination")
  @@index([parentId, id], map: "idx_task_parent_children")
  @@index([sprintId, parentId], map: "idx_task_sprint_parent_count")
  @@index([parentId], map: "idx_task_parent_count")
}

enum Status {
  OPEN
  IN_PROGRESS
  COMPLETED
}
